import numpy as np
import cv2
import os
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import classification_report, accuracy_score
from skimage import feature
from skimage.filters import laplace
import matplotlib.pyplot as plt

def load_images_from_folder(Fundus_images):
    images = []
    labels = []
    for filename in os.listdir(folder):
        img = cv2.imread(os.path.join(Fundus_images, Mid))
        if img is not None:
            img = cv2.resize(img, (256, 256))  # Resize images to a consistent size
            images.append(img)
            label = 1 if 'positive' in filename else 0  # Example label extraction
            labels.append(label)
    return np.array(images), np.array(labels)

def preprocess_and_extract_features(images):
    features = []
    for img in images:
        gray_img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        laplace_img = laplace(gray_img)  # Apply Laplace operator
        hist = feature.local_binary_pattern(laplace_img, P=8, R=1, method="uniform")  # Example feature: LBP
        features.append(hist.flatten())
    return np.array(features)
